#!/usr/bin/env python3
import rospy
from nav_msgs.msg import OccupancyGrid
from scipy.sparse import csr_matrix
import numpy as np
import requests
from datetime import datetime
import sys


class HeatmapSaver(object):
    def __init__(self):
        # self.url = 'http://localhost:5000/insert'

        self.heatmap_subscriber = rospy.Subscriber(
            "/costmap_generator/costmap/costmap", OccupancyGrid, self.save_heatmap)

        costmap = rospy.wait_for_message("/map", OccupancyGrid, timeout=100)
        self.width = costmap.info.width # map_width : Width,
        self.height = costmap.info.height # map_height :  Height 
        self.mask = np.array(costmap.data).astype(bool)
        print(self.mask)
        self.mask = (~self.mask).astype(int)
        # self.mask = csr_matrix(self.mask)
        # self.mask = self.mask.toarray()

    def save_heatmap(self, msg):
        data = np.array(msg.data)
        masked_data = csr_matrix(data * self.mask)
        body = {
            'date': datetime.now().isoformat(),
            'indices': masked_data.indices,
            'indptr': masked_data.indptr,
            'width': msg.info.width,
            'height': msg.info.height    
        }
        print("size: " + str(sys.getsizeof(body)))
        print("orig size: " + str(sys.getsizeof(msg.data)))

if __name__ == '__main__':
    rospy.init_node('heatmap_saver', anonymous=True)
    heatmap = HeatmapSaver()
    rospy.spin()
